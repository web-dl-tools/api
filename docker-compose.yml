version: '3.8'

services:
  postgres:
    image: postgres:12.9
    container_name: web-dl_postgres
    deploy:
      resources:
        limits:
          memory: 50M
        reservations:
          memory: 20M
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - .postgres_data:/var/lib/postgresql/data

  django: &base
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
      args:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_DB=${POSTGRES_DB}
    command: compose/django/start.sh
    container_name: web-dl_django
    depends_on:
      - postgres
      - celery
    deploy:
      resources:
        limits:
          memory: 1000M
        reservations:
          memory: 500M
    environment:
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - SENTRY_DSN=${SENTRY_DSN}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "8000:8000"
    restart: always
    user: ${USER_ID}
    volumes:
      - ./manage.py:/code/manage.py
      - ./requirements.txt:/code/requirements.txt
      - ./compose:/code/compose
      - ./config:/code/config
      - ./src:/code/src
      - ${FILES_PATH}:/code/files

  redis:
    image: redis:7.2.3-bookworm
    container_name: web-dl_redis
    deploy:
      resources:
        limits:
          memory: 250M
        reservations:
          memory: 100M
    restart: always

  celery:
    <<: *base
    command: celery -A config.celery worker --concurrency=1
    container_name: web-dl_celery
    depends_on:
      - redis
      - postgres
    deploy:
      resources:
        limits:
          memory: 250M
        reservations:
          memory: 100M
    ports: []

  qbittorrent:
    image: linuxserver/qbittorrent:4.4.5
    container_name: web-dl_qbittorrent
    depends_on:
      - django
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 50M
    environment:
      - PUID=${USER_ID}
      - TZ=Europe/Amsterdam
      - WEBUI_PORT=8001
    volumes:
      - ${FILES_PATH}:/files
    ports:
      - "6881:6881"
      - "6881:6881/udp"
      - "8001:8001"
    restart: always

  selenium:
    build:
      context: .
      dockerfile: ./compose/selenium/Dockerfile
    command: java -jar selenium.jar
    container_name: web-dl_selenium
    depends_on:
      - django
    deploy:
      resources:
        limits:
          memory: 400M
        reservations:
          memory: 100M
    environment:
      - CHROMEDRIVER_WHITELISTED_IPS=''
    restart: always
